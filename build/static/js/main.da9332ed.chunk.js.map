{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultLocation","lat","lng","Home","useState","defaultLocation","zoom","setZoom","location","setLocation","className","Card","Body","Form","onSubmit","e","console","log","target","value","Group","id","Label","Control","type","placeholder","required","as","map","option","key","disabled","style","height","mapTypeId","width","position","onChangeLocation","onChangeZoom","newZoom","apiKey","Button","variant","App","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da9332ed.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport {Form, Button, Card, Alert} from \"react-bootstrap\";\r\nimport MapPicker from 'react-google-map-picker';\r\n\r\n\r\nconst DefaultLocation = {lat : 10, lng: 106};\r\nconst DefaultZoom = 10;\r\n\r\nconst Home = () => {\r\n    const [defaultLocation, setDefaultLocation] = useState(DefaultLocation);\r\n    const [zoom, setZoom] = useState(DefaultZoom);\r\n    const [location, setLocation] = useState(defaultLocation);\r\n\r\n    const handleSubmit = (e) => {\r\n           console.log(e.target.value);\r\n    }\r\n    const handleChangeLocation = (lat, lng) => {\r\n        setLocation({lat:lat, lng:lng});\r\n    } \r\n\r\n    const handleChangeZoom = (newZoom) => {\r\n        setZoom(newZoom)\r\n    }\r\n\r\n    const handleResetLocation = () => {\r\n        setDefaultLocation({...DefaultLocation})\r\n        setZoom(DefaultZoom);\r\n    }\r\n\r\n\r\n    return (\r\n       <div className=\"home__class\">\r\n         <div className=\"home__form\">\r\n             <Card>\r\n               <Card.Body>\r\n        <Form className=\"w-50\" onSubmit={handleSubmit}>\r\n            <Form.Group id=\"formBasicName\">\r\n                <Form.Label>Name : </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Your Search\" required />\r\n            </Form.Group>\r\n                <Form.Group id=\"formBasicName\" >\r\n                  <Form.Label>\r\n                      Keyword :\r\n                  </Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Search by tag\"  />\r\n                </Form.Group>\r\n                <Form.Group id=\"formBasicName\" >\r\n               <Form.Label>Choose Radius</Form.Label>\r\n               <Form.Control as=\"select\" >\r\n                    <option className=\"d-none\" value=\"\">\r\n                      Select Radius : \r\n                    </option>\r\n                    {[\"1-10\", \"10-20\", \"20-30\",\"30-40\" ,\"40-50\", \"50-60\"].map(option => (\r\n                         <option key={option}> {option} km</option>\r\n                    ))}\r\n               </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group id=\"formResetLocation\" >\r\n              <Form.Label>\r\n                  Latitude : \r\n              </Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Longitude\" value={location.lat} disabled />\r\n               <Form.Control type=\"text\" placeholder=\"Latitude\" value={location.lng}  disabled /> \r\n          </Form.Group>\r\n            <Form.Group id=\"formBasicName\" >\r\n               <Form.Label>Age Group</Form.Label>\r\n               <Form.Control as=\"select\" className=\"rounded-0 shadow\">\r\n                    <option className=\"d-none\" value=\"\">\r\n                         Select Age : \r\n                    </option>\r\n                    {[\"18-25\", \"26-35\", \"36-45\", \"45-51\", \"52-60\"].map(option => (\r\n                         <option key={option}> {option}</option>\r\n                    ))}\r\n               </Form.Control>\r\n          </Form.Group>\r\n            <Form.Group className=\"mb-3\" id=\"language\">\r\n                <Form.Label>Translation Language : </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Choose Language\"  />\r\n            </Form.Group>\r\n                <Form.Group  id=\"formTextArea\" >\r\n                  <Form.Label>\r\n                    Post Message                        \r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    placeholder=\"Write your message here\"\r\n                    style={{height:\"100px\"}}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group  id=\"formTextArea\" >\r\n                  <Form.Label>\r\n                    Message After Translation                        \r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    style={{height:\"100px\"}}\r\n                  />\r\n                </Form.Group>\r\n                <MapPicker\r\n                  defaultLocation={defaultLocation}\r\n                  zoom={zoom}\r\n                  mapTypeId=\"roadmap\"\r\n                  style={{height:'300px', width:'400px', position:\"relative\"}}\r\n                  onChangeLocation={handleChangeLocation}\r\n                  onChangeZoom={handleChangeZoom}\r\n                  apiKey='AIzaSyCCeTyK47JFZfmYgX12Iv5mNYP-QB54HZc'\r\n                />\r\n                <Button className=\"w-100 mt-4\" variant=\"primary\" type=\"submit\">\r\n                        Send \r\n                </Button>\r\n            </Form>\r\n            </Card.Body>\r\n        </Card>\r\n         </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { Navbar,Nav,NavDropdown, Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     <Navbar bg=\"light\" expand=\"lg\">\n  <Container>\n    <Navbar.Brand href=\"#home\">Youtube-Automation</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n        <Nav.Link href=\"#home\">Home</Nav.Link>\n        <Nav.Link href=\"#id\">Id : </Nav.Link>\n        <Nav.Link href=\"#password\">Password : </Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>\n       <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}